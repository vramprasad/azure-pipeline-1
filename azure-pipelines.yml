<<<<<<< HEAD
trigger:
- none
=======
trigger: none

parameters:
- name: image
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest

variables:
- group: varPool
- name: one
  value: initialValue 
>>>>>>> 028f258fd30f0669a1f6042d3335f5627ff53227

pool:
  name: RPLocalPool
  demands:
   - agent.name -equals RPLocalMac

<<<<<<< HEAD
parameters:
  - name: pGroupVariablesName
    displayName: "Name of the variable group"
    type: string
    default: RPVariableGroup1
    values:
      - RPVariableGroup1
      - RPVariableGroup2
      - RPVariableGroup3

  - name: pazureServiceConnection
    displayName: "azure Service Connection"
    type: string
    default: service-connection-1
    values:
      - service-connection-1
      - service-connection-2
      - service-connection-3
  - name: pnumberOfInstances
    displayName: "Number of Instances"
    type: string
    default: 2
    values:
      - 2
      - 3
      - 4
  - name: pEnvironment
    type: string
    default: DEV
    values:
      - DEV
      - TEST
      - ACC
      - PROD

variables: 
    - group: ${{ parameters.GroupVariablesName}}

stages:
- stage: Build
  displayName: 'Build Job'
  jobs: 
  - job: Job1
    displayName: 'Job 1 inside Build'
    steps:
      - template: ./templates/job1.yaml
        parameters:
          azureServiceConnection: ${{ parameters.pazureServiceConnection}}
          numberOfInstances: ${{ parameters.pnumberOfInstances}}
          
- stage: Test 
  displayName: 'Testing Job'
  jobs:
    - job: Job2
      displayName: 'Job2 inside Test'
      steps:
        - template: ./templates/job2.yaml
          parameters:
            azureServiceConnection: ${{ parameters.pazureServiceConnection}}
            Environment: ${{ parameters.pEnvironment}}
                     
          
=======
stages:
- stage: Build
  jobs: 
  - job: "PrintVersion"
    steps:
    - script: java --version
    displayName: Print JAVA version

- stage: Test
  jobs: 
  - job: "PrintVariables"
    steps:
    - script: |
        echo ${{ variables.one }}
        echo 'Printing of local variables completed'
      displayName: Print value of local variables
    - script: |
        echo ${{ parameters.image }}
        echo 'Printing of parameter variables completed'
      displayName: Print value of Parameter variables
    - script: |
        echo ${{ variables.AgentName }}
        echo 'Printing of AgentName variables completed'
      displayName: Print value of Library variables
>>>>>>> 028f258fd30f0669a1f6042d3335f5627ff53227
